name: ci
on:
  workflow_dispatch:
  push:
  # pull_request:
  #   branches: main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ./client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version-file: ".nvmrc"
      - name: Install packages for server
        run: npm ci --ignore-scripts
      - name: Install Packages for client
        run: npm ci --ignore-scripts
        working-directory: ./client
      - name: Run tests
        run: npm run test
      - name: Eliminate devDependencies
        run: npm prune --production
      - name: Build web client
        run: DOCKER_BUILD=true npm run build
        working-directory: ./client
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/${{ github.repository_owner }}/github-action-dashboard
          tag-sha: true
          tag-edge: true
          tag-latest: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/github-action-dashboard
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        #with:
        # hack for https://github.com/docker/build-push-action/issues/126
        #driver-opts: image=moby/buildkit:master
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # password: ${{ secrets.GH_CR_PAT }} #TODO: not sure if needed with new perms
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/github-action-dashboard:edge
          cache-to: type=inline
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }} #this is for logging.
